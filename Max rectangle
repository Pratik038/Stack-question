// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
#define MAX 1000

int maxArea(int M[MAX][MAX], int n, int m);
int main() {
    int T;
    cin >> T;

    int M[MAX][MAX];

    while (T--) {
        int n, m;
        cin >> n >> m;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                cin >> M[i][j];
            }
        }
        cout << maxArea(M, n, m) << endl;
    }
}
// } Driver Code Ends
/*You are required to complete this method*/
int mah(int a[],int n){
    stack<pair<int,int>> s1,s2;
	    int right[n],left[n];
	    for(int i=0;i<n;i++){
	        while(!s1.empty() && s1.top().first >= a[i])
	            s1.pop();
	        left[i]=s1.empty()?-1:s1.top().second;
	        s1.push(make_pair(a[i],i));
	    }
	    for(int i=n-1;i>=0;i--){
	        while(!s2.empty() && s2.top().first >= a[i])
	            s2.pop();
	        right[i]=s2.empty()?n:s2.top().second;
	        s2.push(make_pair(a[i],i));
	    }
	    int width[n];
	    for(int i=0;i<n;i++)
	        width[i]=right[i]-left[i]-1;
	        
	    int area[n];
	    int max1=INT_MIN;
	    for(int i=0;i<n;i++){
	        area[i]=a[i]*width[i];
	        max1=max(area[i],max1);
	    } 
	    return max1;
}
int maxArea(int M[MAX][MAX], int n, int m) {
    // Your code here
    int a[m];
    for(int i=0;i<m;i++)
        a[i]=M[0][i];
    int mx = mah(a,m);
    for(int i=1;i<n;i++){
        for(int j=0;j<m;j++){
            if(M[i][j]==0)
                a[j]=0;
            else
                a[j]=a[j]+M[i][j];
        }
        mx = max(mx,mah(a,m));
    }
    return mx;
}
